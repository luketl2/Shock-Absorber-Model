{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Mount drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# Import class\n","%run \"/content/drive/MyDrive/ME 470 Work/Computational Model/damper.py\""],"metadata":{"id":"b_v7d6WCt9xS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667351837662,"user_tz":300,"elapsed":16996,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}},"outputId":"cf4338f9-537b-4ee3-a4b7-92e24fc421ff"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Imports and initializations\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","\n","d = 1E-3 # m\n","D = (20 + 23.5)/2 * 1E-3 # m\n","rho = 1.29 # kg/m^3\n","mu = 1.81E-5 # kg/(m-s)\n","\n","def left_point_integrate(self, x: list, y: list):\n","    dx = x[1:] - x[0:-1]\n","    return np.sum(y[:-1] * dx)\n","\n","# To help plot, assume stresses come in Pa\n","def plotSS(sim_x = [], sim_y = [], exp_x = [], exp_y = [], title = \"\", legend = True):\n","  if not sim_y == []:\n","    sim_y *= 1E-3\n","  exp_y *= 1E-3\n","  import matplotlib.pyplot as plt\n","  plt.plot(sim_x, sim_y, label = \"Simulation\")\n","  plt.scatter(exp_x, exp_y, label = \"Physical Test\")\n","  plt.title(title)\n","  if legend:\n","    plt.legend()\n","  plt.ylabel('Stress (kPa)')\n","  plt.xlabel('Strain (mm/mm)')\n","  plt.show()"],"metadata":{"id":"2y1S0SgH7eWd","executionInfo":{"status":"ok","timestamp":1667351837663,"user_tz":300,"elapsed":11,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Energy absorption data consolidation for air bellows\n","\n","energy_vec = []\n","\n","# Exp 0.1 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/0.1_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","\n","# Exp 1 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/1_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","# Exp 3 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/3_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","# Exp 4 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/4_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","# Exp 5 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/5_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","# Exp 6 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/6_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","# Exp 7 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/7_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","# Exp 8 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/8_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","test_data = df.to_numpy()[6:, :].astype(float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","energy_vec.append(integrate(test_data[:,0], test_data[:,1]))\n","\n","# Absorbed energy vs load rate\n","plt.plot([0.1,1,3,4,5,6,7,8], energy_vec, linewidth = 3)\n","plt.xlabel(\"Load Rate (mm/s)\")\n","plt.ylabel(\"Energy Absorbed (N-mm)\")\n","plt.title(\"Absorbed Energy vs Load Rate\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"rYJoXHW-0FEo","executionInfo":{"status":"error","timestamp":1667351837987,"user_tz":300,"elapsed":332,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}},"outputId":"c3e3ee48-e0ba-4f4d-e757-d6eebd6cb6cd"},"execution_count":3,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-0e16334aaafa>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Exp 0.1 mm/s trial 1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mpath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/0.1_1.csv\"\u001b[0m \u001b[0;31m# This only works for Luke\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mtest_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    584\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    585\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 586\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    587\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    588\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    480\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    481\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 482\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    483\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    484\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    809\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    810\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 811\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    812\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    813\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1038\u001b[0m             )\n\u001b[1;32m   1039\u001b[0m         \u001b[0;31m# error: Too many arguments for \"ParserBase\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1040\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mmapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[call-arg]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1041\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1042\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_failover_to_python\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/c_parser_wrapper.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m         \u001b[0;31m# open handles\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_open_handles\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m         \u001b[0;32massert\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/base_parser.py\u001b[0m in \u001b[0;36m_open_handles\u001b[0;34m(self, src, kwds)\u001b[0m\n\u001b[1;32m    227\u001b[0m             \u001b[0mmemory_map\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"memory_map\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    228\u001b[0m             \u001b[0mstorage_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"storage_options\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 229\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"encoding_errors\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"strict\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    230\u001b[0m         )\n\u001b[1;32m    231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    705\u001b[0m                 \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    706\u001b[0m                 \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 707\u001b[0;31m                 \u001b[0mnewline\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    708\u001b[0m             )\n\u001b[1;32m    709\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/0.1_1.csv'"]}]},{"cell_type":"code","source":["# Finding Spring Constant of Bellows -- k values aren't accurate because stress strain is being used now, haven't fixed it yet\n","\n","# 0.1 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/0.1_1.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 0.1 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","k_vec.append(k)\n","\n","# 0.1 mm/s trial 2\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/0.1_2.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 0.1 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","\n","# 1 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/1_1.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 1 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","k_vec.append(k)\n","\n","# 1 mm/s trial 2\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/1_2.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 1 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","\n","# 5 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/5_1.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 5 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","k_vec.append(k)\n","\n","# 5 mm/s trial 2\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/5_2.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 5 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","\n","# 8 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/8_1.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 8 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","k_vec.append(k)\n","\n","# 8 mm/s trial 2\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/8_2.csv\" # This only works for Luke\n","plotSS(exp_x = format_data(path)[:,0], exp_y = format_data(path)[:,1], title = \"Bellows Stress vs Strain at 8 mm/s\", legend = False)\n","index = np.where(format_data(path)[:,0] > 0.5)[0][0]\n","k = format_data(path)[index,1]/format_data(path)[index,0]\n","\n","# k vs load rate\n","load_rate = [0.1, 1, 5, 8]\n","plt.plot(load_rate, k_vec)\n","plt.title(\"Spring Constant vs Load Rate\")\n","plt.xlabel(\"Load Rate (mm/s)\")\n","plt.ylabel(\"Spring Constant, k (N/mm)\")\n","print(k_vec)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"ARU-e_yK9rFS","executionInfo":{"status":"error","timestamp":1667353557213,"user_tz":300,"elapsed":1046,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}},"outputId":"a768deef-5c84-4a82-b1e2-1c523c4262d1"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                60.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","9.69800                                                       9.89823   \n","9.72400                                                       9.92421   \n","9.75000                                                       9.95020   \n","9.77600                                                       9.97618   \n","9.80000                                                      10.00023   \n","\n","                                                   10/18/2022 1:33 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","9.69800                                                       1.04640  \n","9.72400                                                       1.05843  \n","9.75000                                                       1.06768  \n","9.77600                                                       1.06761  \n","9.80000                                                       1.05994  \n","\n","[384 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                60.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","9.69800                                                       9.89823   \n","9.72400                                                       9.92421   \n","9.75000                                                       9.95020   \n","9.77600                                                       9.97618   \n","9.80000                                                      10.00023   \n","\n","                                                   10/18/2022 1:33 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","9.69800                                                       1.04640  \n","9.72400                                                       1.05843  \n","9.75000                                                       1.06768  \n","9.77600                                                       1.06761  \n","9.80000                                                       1.05994  \n","\n","[384 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                60.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","9.69800                                                       9.89823   \n","9.72400                                                       9.92421   \n","9.75000                                                       9.95020   \n","9.77600                                                       9.97618   \n","9.80000                                                      10.00023   \n","\n","                                                   10/18/2022 1:33 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","9.69800                                                       1.04640  \n","9.72400                                                       1.05843  \n","9.75000                                                       1.06768  \n","9.77600                                                       1.06761  \n","9.80000                                                       1.05994  \n","\n","[384 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                               300.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","1.82000                                                       9.50630   \n","1.84600                                                       9.63627   \n","1.87200                                                       9.76623   \n","1.89800                                                       9.89625   \n","1.92000                                                      10.00623   \n","\n","                                                   10/18/2022 1:36 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","1.82000                                                       1.24013  \n","1.84600                                                       1.24770  \n","1.87200                                                       1.25010  \n","1.89800                                                       1.26927  \n","1.92000                                                       1.28084  \n","\n","[81 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                               300.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","1.82000                                                       9.50630   \n","1.84600                                                       9.63627   \n","1.87200                                                       9.76623   \n","1.89800                                                       9.89625   \n","1.92000                                                      10.00623   \n","\n","                                                   10/18/2022 1:36 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","1.82000                                                       1.24013  \n","1.84600                                                       1.24770  \n","1.87200                                                       1.25010  \n","1.89800                                                       1.26927  \n","1.92000                                                       1.28084  \n","\n","[81 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                               300.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","1.82000                                                       9.50630   \n","1.84600                                                       9.63627   \n","1.87200                                                       9.76623   \n","1.89800                                                       9.89625   \n","1.92000                                                      10.00623   \n","\n","                                                   10/18/2022 1:36 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","1.82000                                                       1.24013  \n","1.84600                                                       1.24770  \n","1.87200                                                       1.25010  \n","1.89800                                                       1.26927  \n","1.92000                                                       1.28084  \n","\n","[81 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                               480.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","(s)                                                              (mm)   \n","0.00000                                                       0.38818   \n","0.02600                                                       0.42654   \n","0.05200                                                       0.54182   \n","0.07800                                                       0.73216   \n","0.10400                                                       0.97966   \n","0.13000                                                       1.24993   \n","0.15600                                                       1.53118   \n","0.18200                                                       1.79609   \n","0.20800                                                       2.03400   \n","0.23400                                                       2.25718   \n","0.26000                                                       2.47334   \n","0.28600                                                       2.68586   \n","0.31200                                                       2.89650   \n","0.33800                                                       3.10596   \n","0.36400                                                       3.31489   \n","0.39000                                                       3.52339   \n","0.41600                                                       3.73173   \n","0.44200                                                       3.93986   \n","0.46800                                                       4.14804   \n","0.49400                                                       4.35611   \n","0.52000                                                       4.56413   \n","0.54600                                                       4.77209   \n","0.57200                                                       4.98011   \n","0.59800                                                       5.18813   \n","0.62400                                                       5.39614   \n","0.65000                                                       5.60411   \n","0.67600                                                       5.81212   \n","0.70200                                                       6.02020   \n","0.72800                                                       6.22816   \n","0.75400                                                       6.43618   \n","0.78000                                                       6.64414   \n","0.80600                                                       6.85216   \n","0.83200                                                       7.06018   \n","0.85800                                                       7.26820   \n","0.88400                                                       7.47616   \n","0.91000                                                       7.68418   \n","0.93600                                                       7.89220   \n","0.96200                                                       8.10021   \n","0.98800                                                       8.30812   \n","1.01400                                                       8.51614   \n","1.04000                                                       8.72416   \n","1.06600                                                       8.93218   \n","1.09200                                                       9.14014   \n","1.11800                                                       9.34816   \n","1.14400                                                       9.55618   \n","1.17000                                                       9.76420   \n","1.19600                                                       9.97216   \n","1.20000                                                      10.00414   \n","\n","                                                   10/18/2022 1:38 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","(s)                                                             (kgf)  \n","0.00000                                                       0.02954  \n","0.02600                                                       0.05416  \n","0.05200                                                       0.11903  \n","0.07800                                                       0.19479  \n","0.10400                                                       0.29138  \n","0.13000                                                       0.38573  \n","0.15600                                                       0.47314  \n","0.18200                                                       0.55391  \n","0.20800                                                       0.61242  \n","0.23400                                                       0.67815  \n","0.26000                                                       0.73353  \n","0.28600                                                       0.78678  \n","0.31200                                                       0.82656  \n","0.33800                                                       0.86021  \n","0.36400                                                       0.88948  \n","0.39000                                                       0.91864  \n","0.41600                                                       0.95110  \n","0.44200                                                       0.99298  \n","0.46800                                                       1.01043  \n","0.49400                                                       1.03379  \n","0.52000                                                       1.05603  \n","0.54600                                                       1.07721  \n","0.57200                                                       1.09366  \n","0.59800                                                       1.09989  \n","0.62400                                                       1.09677  \n","0.65000                                                       1.09222  \n","0.67600                                                       1.10811  \n","0.70200                                                       1.10572  \n","0.72800                                                       1.10166  \n","0.75400                                                       1.09160  \n","0.78000                                                       1.09479  \n","0.80600                                                       1.10516  \n","0.83200                                                       1.13177  \n","0.85800                                                       1.19074  \n","0.88400                                                       1.24851  \n","0.91000                                                       1.29028  \n","0.93600                                                       1.30759  \n","0.96200                                                       1.33030  \n","0.98800                                                       1.36256  \n","1.01400                                                       1.36557  \n","1.04000                                                       1.38321  \n","1.06600                                                       1.38865  \n","1.09200                                                       1.40409  \n","1.11800                                                       1.42581  \n","1.14400                                                       1.42120  \n","1.17000                                                       1.41030  \n","1.19600                                                       1.42820  \n","1.20000                                                       1.43166  \n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"stream","name":"stdout","text":["                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                               480.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","(s)                                                              (mm)   \n","0.00000                                                       0.38818   \n","0.02600                                                       0.42654   \n","0.05200                                                       0.54182   \n","0.07800                                                       0.73216   \n","0.10400                                                       0.97966   \n","0.13000                                                       1.24993   \n","0.15600                                                       1.53118   \n","0.18200                                                       1.79609   \n","0.20800                                                       2.03400   \n","0.23400                                                       2.25718   \n","0.26000                                                       2.47334   \n","0.28600                                                       2.68586   \n","0.31200                                                       2.89650   \n","0.33800                                                       3.10596   \n","0.36400                                                       3.31489   \n","0.39000                                                       3.52339   \n","0.41600                                                       3.73173   \n","0.44200                                                       3.93986   \n","0.46800                                                       4.14804   \n","0.49400                                                       4.35611   \n","0.52000                                                       4.56413   \n","0.54600                                                       4.77209   \n","0.57200                                                       4.98011   \n","0.59800                                                       5.18813   \n","0.62400                                                       5.39614   \n","0.65000                                                       5.60411   \n","0.67600                                                       5.81212   \n","0.70200                                                       6.02020   \n","0.72800                                                       6.22816   \n","0.75400                                                       6.43618   \n","0.78000                                                       6.64414   \n","0.80600                                                       6.85216   \n","0.83200                                                       7.06018   \n","0.85800                                                       7.26820   \n","0.88400                                                       7.47616   \n","0.91000                                                       7.68418   \n","0.93600                                                       7.89220   \n","0.96200                                                       8.10021   \n","0.98800                                                       8.30812   \n","1.01400                                                       8.51614   \n","1.04000                                                       8.72416   \n","1.06600                                                       8.93218   \n","1.09200                                                       9.14014   \n","1.11800                                                       9.34816   \n","1.14400                                                       9.55618   \n","1.17000                                                       9.76420   \n","1.19600                                                       9.97216   \n","1.20000                                                      10.00414   \n","\n","                                                   10/18/2022 1:38 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","(s)                                                             (kgf)  \n","0.00000                                                       0.02954  \n","0.02600                                                       0.05416  \n","0.05200                                                       0.11903  \n","0.07800                                                       0.19479  \n","0.10400                                                       0.29138  \n","0.13000                                                       0.38573  \n","0.15600                                                       0.47314  \n","0.18200                                                       0.55391  \n","0.20800                                                       0.61242  \n","0.23400                                                       0.67815  \n","0.26000                                                       0.73353  \n","0.28600                                                       0.78678  \n","0.31200                                                       0.82656  \n","0.33800                                                       0.86021  \n","0.36400                                                       0.88948  \n","0.39000                                                       0.91864  \n","0.41600                                                       0.95110  \n","0.44200                                                       0.99298  \n","0.46800                                                       1.01043  \n","0.49400                                                       1.03379  \n","0.52000                                                       1.05603  \n","0.54600                                                       1.07721  \n","0.57200                                                       1.09366  \n","0.59800                                                       1.09989  \n","0.62400                                                       1.09677  \n","0.65000                                                       1.09222  \n","0.67600                                                       1.10811  \n","0.70200                                                       1.10572  \n","0.72800                                                       1.10166  \n","0.75400                                                       1.09160  \n","0.78000                                                       1.09479  \n","0.80600                                                       1.10516  \n","0.83200                                                       1.13177  \n","0.85800                                                       1.19074  \n","0.88400                                                       1.24851  \n","0.91000                                                       1.29028  \n","0.93600                                                       1.30759  \n","0.96200                                                       1.33030  \n","0.98800                                                       1.36256  \n","1.01400                                                       1.36557  \n","1.04000                                                       1.38321  \n","1.06600                                                       1.38865  \n","1.09200                                                       1.40409  \n","1.11800                                                       1.42581  \n","1.14400                                                       1.42120  \n","1.17000                                                       1.41030  \n","1.19600                                                       1.42820  \n","1.20000                                                       1.43166  \n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                               480.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","(s)                                                              (mm)   \n","0.00000                                                       0.38818   \n","0.02600                                                       0.42654   \n","0.05200                                                       0.54182   \n","0.07800                                                       0.73216   \n","0.10400                                                       0.97966   \n","0.13000                                                       1.24993   \n","0.15600                                                       1.53118   \n","0.18200                                                       1.79609   \n","0.20800                                                       2.03400   \n","0.23400                                                       2.25718   \n","0.26000                                                       2.47334   \n","0.28600                                                       2.68586   \n","0.31200                                                       2.89650   \n","0.33800                                                       3.10596   \n","0.36400                                                       3.31489   \n","0.39000                                                       3.52339   \n","0.41600                                                       3.73173   \n","0.44200                                                       3.93986   \n","0.46800                                                       4.14804   \n","0.49400                                                       4.35611   \n","0.52000                                                       4.56413   \n","0.54600                                                       4.77209   \n","0.57200                                                       4.98011   \n","0.59800                                                       5.18813   \n","0.62400                                                       5.39614   \n","0.65000                                                       5.60411   \n","0.67600                                                       5.81212   \n","0.70200                                                       6.02020   \n","0.72800                                                       6.22816   \n","0.75400                                                       6.43618   \n","0.78000                                                       6.64414   \n","0.80600                                                       6.85216   \n","0.83200                                                       7.06018   \n","0.85800                                                       7.26820   \n","0.88400                                                       7.47616   \n","0.91000                                                       7.68418   \n","0.93600                                                       7.89220   \n","0.96200                                                       8.10021   \n","0.98800                                                       8.30812   \n","1.01400                                                       8.51614   \n","1.04000                                                       8.72416   \n","1.06600                                                       8.93218   \n","1.09200                                                       9.14014   \n","1.11800                                                       9.34816   \n","1.14400                                                       9.55618   \n","1.17000                                                       9.76420   \n","1.19600                                                       9.97216   \n","1.20000                                                      10.00414   \n","\n","                                                   10/18/2022 1:38 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","(s)                                                             (kgf)  \n","0.00000                                                       0.02954  \n","0.02600                                                       0.05416  \n","0.05200                                                       0.11903  \n","0.07800                                                       0.19479  \n","0.10400                                                       0.29138  \n","0.13000                                                       0.38573  \n","0.15600                                                       0.47314  \n","0.18200                                                       0.55391  \n","0.20800                                                       0.61242  \n","0.23400                                                       0.67815  \n","0.26000                                                       0.73353  \n","0.28600                                                       0.78678  \n","0.31200                                                       0.82656  \n","0.33800                                                       0.86021  \n","0.36400                                                       0.88948  \n","0.39000                                                       0.91864  \n","0.41600                                                       0.95110  \n","0.44200                                                       0.99298  \n","0.46800                                                       1.01043  \n","0.49400                                                       1.03379  \n","0.52000                                                       1.05603  \n","0.54600                                                       1.07721  \n","0.57200                                                       1.09366  \n","0.59800                                                       1.09989  \n","0.62400                                                       1.09677  \n","0.65000                                                       1.09222  \n","0.67600                                                       1.10811  \n","0.70200                                                       1.10572  \n","0.72800                                                       1.10166  \n","0.75400                                                       1.09160  \n","0.78000                                                       1.09479  \n","0.80600                                                       1.10516  \n","0.83200                                                       1.13177  \n","0.85800                                                       1.19074  \n","0.88400                                                       1.24851  \n","0.91000                                                       1.29028  \n","0.93600                                                       1.30759  \n","0.96200                                                       1.33030  \n","0.98800                                                       1.36256  \n","1.01400                                                       1.36557  \n","1.04000                                                       1.38321  \n","1.06600                                                       1.38865  \n","1.09200                                                       1.40409  \n","1.11800                                                       1.42581  \n","1.14400                                                       1.42120  \n","1.17000                                                       1.41030  \n","1.19600                                                       1.42820  \n","1.20000                                                       1.43166  \n","[0.61310416 0.73413318 0.92587091 1.03986609]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n","                                                   General : End date  \\\n","Strain : Compressive strain (Extension) gauge l...          100.00000   \n","Strain : Time at removal                                          NaN   \n","Test : Rate 1                                                 6.00000   \n","General : Start date                                       10/18/2022   \n","Time                                                        Extension   \n","...                                                               ...   \n","98.09800                                                      9.98979   \n","98.12400                                                      9.99230   \n","98.15000                                                      9.99498   \n","98.17600                                                      9.99761   \n","98.20200                                                     10.00018   \n","\n","                                                   10/18/2022 1:25 PM  \n","Strain : Compressive strain (Extension) gauge l...                 mm  \n","Strain : Time at removal                                            s  \n","Test : Rate 1                                                  mm/min  \n","General : Start date                                              NaN  \n","Time                                                             Load  \n","...                                                               ...  \n","98.09800                                                      0.77905  \n","98.12400                                                      0.78277  \n","98.15000                                                      0.78784  \n","98.17600                                                      0.77894  \n","98.20200                                                      0.78408  \n","\n","[3784 rows x 2 columns]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:11: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # This is added back by InteractiveShellApp.init_path()\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-32dc1e87640a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mformat_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0mk\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformat_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mformat_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 32\u001b[0;31m \u001b[0mk_vec\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m \u001b[0;31m# 0.1 mm/s trial 2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'append'"]}]},{"cell_type":"code","source":["k_vec = np.zeros((4,2))\n","\n","D = (20 + 23.5)/2 * 1E-3 # m\n","\n","def format_data (path):\n","  df = pd.read_csv(path)\n","  data = df.to_numpy()[6:, :]\n","  test_data = data.astype(float)\n","  test_data[:,1] *= 9.81 # load in N\n","  return test_data\n","\n","load_rates = [0.1, 1, 5, 8]\n","for i in range(len(load_rates)):\n","  for trial in range(2):\n","    path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 0 (Spring Constant)/{}_{}.csv\".format(load_rates[i],trial+1) # This only works for Luke\n","    index = np.where(format_data(path)[:,0] > 5)[0][0]\n","    k = format_data(path)[index,1]/format_data(path)[index,0]\n","    k_vec[i, trial] = k\n","k_vec = np.mean(k_vec,1)\n","print(k_vec)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cOKU724kBWCY","executionInfo":{"status":"ok","timestamp":1667354875922,"user_tz":300,"elapsed":330,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}},"outputId":"8fe2ed0f-4843-4d8c-f9bd-895bc84378cb"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["[1.20372919 1.41932069 1.86683541 2.10151015]\n"]}]},{"cell_type":"code","source":["# Experiment 1\n","test_speeds = [0.1, 1, 3, 4, 5, 6, 7, 8] # mm/s\n","d = 1E-3 # m\n","D = (20 + 23.5)/2 * 1E-3 # m\n","rho = 1.29 # kg/m^3 (air)\n","mu = 1.81E-5 # kg/(m-s)\n","n = 1\n","\n","%run \"/content/drive/MyDrive/ME 470 Work/Computational Model/damper.py\"\n","\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1/8_1.csv\"\n","\n","dampers = [damper(d, D, rho, mu, n)] * len(test_speeds)\n","\n","for trial in range(len(test_speeds)):\n","  u = test_speeds[trial]*1E-3 # m/s\n","  dt = 0.1\n","  t_total = 10e-3/u\n","  n_iterations = int(t_total/dt)\n","  for time_step in range(n_iterations):\n","    dampers[trial].step(dt, u)\n","  dampers[trial].plotSS()\n","  print(dampers[trial].force_history)"],"metadata":{"id":"AaUAhRYx_Tb3","executionInfo":{"status":"aborted","timestamp":1667351837988,"user_tz":300,"elapsed":6,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Simulate at 1 mm/s\n","k = 1.2262083109185047E3\n","test_damper = damper(d, D, rho, mu, k, h = 10E-3)\n","u = 1E-3 # m/s\n","dt = 0.1\n","n_iterations = 100 # match test\n","\n","force_history = np.zeros(n_iterations,)\n","disp_history = np.zeros(n_iterations,)\n","\n","for time_step in range(n_iterations):\n","  test_damper.step(dt, u)\n","  force_history[time_step] = test_damper.total_F\n","  disp_history[time_step] = test_damper.disp\n","\n","# Exp 1 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/1_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(np.float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","# Plot comparison in SS\n","sim_x = disp_history*1E3/10\n","sim_y = force_history/(np.pi*test_damper.D**2/4)\n","exp_x = test_data[:,0]/10\n","exp_y = test_data[:,1]/(np.pi*test_damper.D**2/4)\n","title = \"Speed = 1 mm/s\"\n","\n","plotSS(sim_x, sim_y, exp_x, exp_y, title)"],"metadata":{"id":"hfxsvtysJs-V","executionInfo":{"status":"aborted","timestamp":1667351837988,"user_tz":300,"elapsed":5,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Simulate at 3 mm/s\n","k = 1.4682663600926908E3\n","test_damper = damper(d, D, rho, mu, k, h = 10E-3)\n","u = 3E-3 # m/s\n","dt = 0.1\n","n_iterations = 35 # match test\n","\n","force_history = np.zeros(n_iterations,)\n","disp_history = np.zeros(n_iterations,)\n","\n","for time_step in range(n_iterations):\n","  test_damper.step(dt, u)\n","  force_history[time_step] = test_damper.total_F\n","  disp_history[time_step] = test_damper.disp\n","\n","# Exp 3 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/3_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(np.float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","# Plot comparison in SS\n","sim_x = disp_history*1E3/10\n","sim_y = force_history/(np.pi*test_damper.D**2/4)\n","exp_x = test_data[:,0]/10\n","exp_y = test_data[:,1]/(np.pi*test_damper.D**2/4)\n","title = \"Speed = 3 mm/s\"\n","\n","plotSS(sim_x, sim_y, exp_x, exp_y, title)"],"metadata":{"id":"7sgMt8OGJ8hO","executionInfo":{"status":"aborted","timestamp":1667351837989,"user_tz":300,"elapsed":6,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Simulate at 5 mm/s\n","k = 1.851741820562578E3\n","test_damper = damper(d, D, rho, mu, k, h = 10E-3)\n","u = 5E-3 # m/s\n","dt = 0.1\n","n_iterations = 20 # match test\n","\n","force_history = np.zeros(n_iterations,)\n","disp_history = np.zeros(n_iterations,)\n","\n","for time_step in range(n_iterations):\n","  test_damper.step(dt, u)\n","  force_history[time_step] = test_damper.total_F\n","  disp_history[time_step] = test_damper.disp\n","\n","# Exp 5 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/5_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(np.float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","# Plot comparison in SS\n","sim_x = disp_history*1E3/10\n","sim_y = force_history/(np.pi*test_damper.D**2/4)\n","exp_x = test_data[:,0]/10\n","exp_y = test_data[:,1]/(np.pi*test_damper.D**2/4)\n","title = \"Speed = 5 mm/s\"\n","\n","plotSS(sim_x, sim_y, exp_x, exp_y, title)"],"metadata":{"id":"n1k1t1ovJ96X","executionInfo":{"status":"aborted","timestamp":1667351837989,"user_tz":300,"elapsed":6,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Simulate at 7 mm/s\n","k = 2.0797321771042747E3\n","test_damper = damper(d, D, rho, mu, k, h = 10E-3)\n","u = 7E-3 # m/s\n","dt = 0.1\n","n_iterations = 15 # match test\n","\n","force_history = np.zeros(n_iterations,)\n","disp_history = np.zeros(n_iterations,)\n","\n","for time_step in range(n_iterations):\n","  test_damper.step(dt, u)\n","  force_history[time_step] = test_damper.total_F\n","  disp_history[time_step] = test_damper.disp\n","\n","# Exp 7 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 1 (Air)/7_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(np.float)\n","test_data[:,1] *= 9.81 # load in N\n","\n","# Plot comparison in SS\n","sim_x = disp_history*1E3/10\n","sim_y = force_history/(np.pi*test_damper.D**2/4)\n","exp_x = test_data[:,0]/10\n","exp_y = test_data[:,1]/(np.pi*test_damper.D**2/4)\n","title = \"Speed = 7 mm/s\"\n","\n","plotSS(sim_x, sim_y, exp_x, exp_y, title)"],"metadata":{"id":"bpeMzThLJ-PQ","executionInfo":{"status":"aborted","timestamp":1667351837989,"user_tz":300,"elapsed":6,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Toothpaste Simulation and Data Consolidation\n","\n","# Simulate at 0.1 mm/s\n","\n","d = 1E-3 # m\n","D = (20 + 23.5)/2 * 1E-3 # m\n","rho = 1330 # kg/m^3\n","mu = 0.7 # kg/(m-s)\n","k = 1126 # N/m\n","\n","test_damper = damper(d, D, rho, mu, k, h = 10E-3)\n","u = 0.1E-3 # m/s\n","dt = 0.1\n","t_total = 10E-3/u\n","n_iterations = int(t_total/dt) # match test\n","\n","force_history = np.zeros(n_iterations,)\n","disp_history = np.zeros(n_iterations,)\n","\n","for time_step in range(n_iterations):\n","  test_damper.step(dt, u)\n","  force_history[time_step] = test_damper.total_F\n","  disp_history[time_step] = test_damper.disp\n","\n","# Exp 3 mm/s trial 1\n","path = \"/content/drive/MyDrive/ME 470 Work/Data/Experiment 2/0.1_1.csv\" # This only works for Luke\n","df = pd.read_csv(path)\n","data = df.to_numpy()[6:, :]\n","test_data = data.astype(np.float)\n","test_data[:,1] *= 9.81 # load in N\n","av3 = np.average(test_data[:, 1])\n","\n","# Plot comparison\n","sim_x = disp_history*1E3/10\n","sim_y = force_history/(np.pi*test_damper.D**2/4)\n","exp_x = test_data[:,0]/10\n","exp_y = test_data[:,1]/(np.pi*test_damper.D**2/4)\n","title = \"Speed = 0.1 mm/s\"\n","\n","plotSS(sim_x, sim_y, exp_x, exp_y, title)"],"metadata":{"id":"DcFpMf--Ny5h","executionInfo":{"status":"aborted","timestamp":1667351837990,"user_tz":300,"elapsed":6,"user":{"displayName":"Luke Lalonde","userId":"14746671924040432230"}}},"execution_count":null,"outputs":[]}]}